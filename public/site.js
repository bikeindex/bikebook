// Generated by CoffeeScript 1.3.3
(function() {
  var getBike, getModelList, setModelList, updateModelDisplay;

  getModelList = function(e) {
    var mnfg, model_list, target, url, year;
    target = $(e.target);
    year = target.parents('.selectors').find('select.year-select').val();
    model_list = target.parents('.selectors').find('.model-select-contain');
    mnfg = target.parents('.selectors').find('select.manufacturer-select').val();
    if (mnfg.length !== 0) {
      url = "/?manufacturer=" + mnfg;
      return $.ajax({
        type: "GET",
        url: url,
        success: function(data, textStatus, jqXHR) {
          return setModelList(model_list, data);
        }
      });
    } else {
      return model_list.fadeOut('fast', function() {
        return model_list.empty();
      });
    }
  };

  getBike = function(e) {
    var mnfg, model, target, url, year;
    target = $(e.target);
    model = target.parents('.selectors').find('select.model-select').val();
    if (!(model.length > 0)) {
      return true;
    }
    mnfg = target.parents('.selectors').find('select.manufacturer-select').val();
    year = model.substring(0, 4);
    url = "/?manufacturer=" + mnfg + "&year=" + year + "&frame_model=" + (model.slice(5));
    return $.ajax({
      type: "GET",
      url: url,
      success: function(data, textStatus, jqXHR) {
        return updateModelDisplay(target.parents('section'), data);
      }
    });
  };

  updateModelDisplay = function(target, data) {
    var bike, c, comp, desc, dlgroup, field, fields, key, name, photo, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _results;
    if (data == null) {
      data = [];
    }
    fields = ['.bikebase', '.frameandfork', '.drivetrainandbrakes', '.wheels', '.additionalparts'];
    for (_i = 0, _len = fields.length; _i < _len; _i++) {
      field = fields[_i];
      target.find("" + field + " dl").fadeOut('fast');
      target.find("" + field + " dl").empty();
    }
    bike = data["bike"];
    target.find('h2').html("" + bike["frame_model"] + " <small>by " + bike["manufacturer"] + " (" + bike["year"] + ")</small>");
    photo = target.find('.image-holder');
    photo.find('img').fadeOut('fast', function() {
      photo.find('.model-photo').remove();
      if (bike["stock_photo_small"] !== void 0) {
        photo.append("<a class='model-photo' href='" + bike["stock_photo_url"] + "'><img src='" + bike["stock_photo_small"] + "'></a>");
        return photo.find('.model-photo').fadeIn("medium");
      } else {
        return photo.find('img').fadeIn();
      }
    });
    target.find(".bikebase p").html("" + bike['description'] + " (<a href='" + bike["manufacturers_url"] + "'>manufacturer's page</a>)");
    if (bike['rear_wheel_bsd'] !== void 0) {
      desc = '';
      if (bike['rear_tire_narrow'] !== void 0) {
        desc = "Fat ";
        if (bike['rear_tire_narrow']) {
          desc = "Narrow ";
        }
      }
      desc += bike['rear_wheel_bsd'];
      target.find(".bikebase dl").append("<dt>tires</dt><dd>" + desc + "</dd>");
    }
    _ref = ['paint_description', 'original_msrp', 'cycle_type'];
    for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
      key = _ref[_j];
      if (bike[key] !== void 0) {
        c = "<dt>" + (key.replace(/_/g, ' ')) + "</dt><dd>" + bike[key] + "</dd>";
        target.find(".bikebase dl").append(c);
      }
    }
    _ref1 = data["components"];
    for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
      comp = _ref1[_k];
      name = comp["component_type"].replace(/_/g, ' ');
      if (comp["front_or_rear"] === "both") {
        name += "s";
      } else if (comp["front_or_rear"] === "front") {
        name = "front " + name;
      } else if (comp["front_or_rear"] === "rear") {
        name = "rear " + name;
      }
      dlgroup = comp["cgroup"].replace(/\s+/g, '').toLowerCase();
      c = "<dt>" + name + "</dt><dd>" + comp["description"] + "</dd>";
      target.find("." + dlgroup + " dl").append(c);
    }
    _results = [];
    for (_l = 0, _len3 = fields.length; _l < _len3; _l++) {
      field = fields[_l];
      if (target.find("" + field + " dd").length > 0) {
        _results.push(target.find("" + field + ", " + field + " dl").fadeIn());
      } else {
        _results.push(target.find("" + field).fadeOut());
      }
    }
    return _results;
  };

  setModelList = function(target, data) {
    var model, selects, year, _i, _j, _len, _len1, _ref, _ref1;
    if (data == null) {
      data = [];
    }
    selects = "<select class='model-select'><option value=''>Select a model</option>";
    _ref = Object.keys(data);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      year = _ref[_i];
      selects += "<optgroup label='" + year + "'>";
      _ref1 = data[year];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        model = _ref1[_j];
        selects += "<option value='" + year + " " + model + "'>" + year + " " + model + "</option>";
      }
      selects += "</optgroup>";
    }
    target.html(selects + "</select>");
    target.find('select').select2().on("change", function(e) {
      return getBike(e);
    });
    return target.fadeIn('fast');
  };

  $(document).ready(function() {
    $('.manufacturer-select, .year-select').on("change", function(e) {
      return getModelList(e);
    });
    return $('select').select2();
  });

}).call(this);
