// Generated by CoffeeScript 1.3.3
(function() {
  var addBikeContainer, collapseToggle, fillInBike, getFrameModel, getModelList, initialize, intitialBike, resetContainerCount, setModelList, targetBike, updateManufacturer, updateModelDisplay, urlParam;

  resetContainerCount = function() {
    var bc;
    bc = $('#bikes-container .bike').length;
    if (bc === 0) {
      addBikeContainer();
    }
    if (bc < 3) {
      $("#bikes-container").removeClass().addClass("showing-" + bc + "-bikes");
    }
    if (bc > 2) {
      return $("#bikes-container").removeClass().addClass('showing-many-bikes');
    }
  };

  collapseToggle = function(target) {
    var cat, closed, section, _i, _len, _ref;
    target.parents('.comp_cat_wrap').find('dl').slideToggle(300);
    target.parents('.comp_cat_wrap').toggleClass('closed');
    closed = [];
    section = target.parents('.model-display');
    _ref = section.find('.comp_cat_wrap');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      cat = _ref[_i];
      if (section.find(cat).hasClass('closed')) {
        closed.push(section.find(cat).attr('data-cat'));
      }
    }
    return $("#collapsed-cats").data('collapsed', closed);
  };

  updateManufacturer = function(target) {
    var bike, data, mnfg, year;
    bike = targetBike(target);
    year = target.find('select.year-select');
    if ((bike.manufacturer != null) && bike.manufacturer.length > 0) {
      mnfg = target.find('select.manufacturer-select option:selected');
      data = JSON.parse("[" + (mnfg.attr('data-years')) + "]");
      year.html(Mustache.to_html($('#years_tmpl').html(), data));
      year.select2("enable", true);
      if (bike.year != null) {
        year.select2("val", bike.year);
      } else {
        year.select2("val", data[0]);
      }
      return getModelList(target);
    } else {
      year.select2("enable", false);
      return target.find('.model-select-contain').fadeOut('fast', function() {
        return target.find('.model-select-contain').empty();
      });
    }
  };

  getModelList = function(target) {
    var bike, url;
    bike = targetBike(target);
    url = "/?manufacturer=" + bike.manufacturer + "&year=" + bike.year;
    return $.ajax({
      type: "GET",
      url: url,
      success: function(data, textStatus, jqXHR) {
        return setModelList(target, data);
      }
    });
  };

  getFrameModel = function(target) {
    var bike, url;
    bike = targetBike(target);
    if (!((bike.frame_model != null) && bike.frame_model.length > 0)) {
      return null;
    }
    url = "/?manufacturer=" + bike.manufacturer + "&year=" + bike.year + "&frame_model=" + bike.frame_model;
    return $.ajax({
      type: "GET",
      url: url,
      success: function(data, textStatus, jqXHR) {
        return target.find('.model-display').fadeOut(200, function() {
          updateModelDisplay(target, data);
          return target.data('bike', '');
        });
      }
    });
  };

  updateModelDisplay = function(target, data) {
    var bike, c, closed, comp, desc, dlgroup, field, fields, groups, link, name, tires, url, wheel_sizes, _i, _j, _k, _len, _len1, _len2, _ref, _results;
    if (data == null) {
      data = [];
    }
    target.find('.model-display').html(Mustache.to_html($('#details_tmpl').html(), data));
    target.find('.model-display').fadeIn();
    fields = ['.bike-base', '.frameandfork', '.drivetrainandbrakes', '.wheels', '.additionalparts'];
    bike = data["bike"];
    if (bike['rear_wheel_bsd'] !== void 0) {
      tires = '';
      wheel_sizes = JSON.parse($('#wheel_sizes').attr('data-sizes'));
      desc = wheel_sizes[bike['rear_wheel_bsd']];
      if (bike['rear_tire_narrow'] !== void 0) {
        tires = bike['rear_tire_narrow'] === 'true' ? 'skinny' : 'fat';
        tires = "(" + tires + " tires)";
      }
      target.find(".w-size").html("" + desc + " " + tires);
    } else {
      target.find(".dt-w-size, .w-size").hide();
    }
    _ref = data["components"];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      comp = _ref[_i];
      name = comp["component_type"].replace(/_/g, ' ');
      if (comp["front_or_rear"] === "both") {
        name += "s";
      } else if (comp["front_or_rear"] === "front") {
        name = "front " + name;
      } else if (comp["front_or_rear"] === "rear") {
        name = "rear " + name;
      }
      dlgroup = comp["cgroup"].replace(/\s+/g, '').toLowerCase();
      c = "<dt>" + name + "</dt><dd>" + comp["description"] + "</dd>";
      target.find("." + dlgroup + " dl").append(c);
    }
    for (_j = 0, _len1 = fields.length; _j < _len1; _j++) {
      field = fields[_j];
      if (target.find("" + field + " dd").length === 0) {
        target.find("" + field).fadeOut('fast');
      }
    }
    bike = targetBike(target);
    url = "http://bikebook.io/?s_manufacturer=" + bike.manufacturer + "&s_year=" + bike.year + "&s_frame_model=" + bike.frame_model;
    link = target.find('.share-bike').attr('href', url);
    groups = $("#collapsed-cats").data('collapsed');
    if (groups.length > 0) {
      _results = [];
      for (_k = 0, _len2 = groups.length; _k < _len2; _k++) {
        closed = groups[_k];
        _results.push(target.find(closed).toggleClass('closed').find('dl').hide());
      }
      return _results;
    }
  };

  setModelList = function(target, data) {
    var bike, model_select;
    if (data == null) {
      data = [];
    }
    model_select = target.find('.model-select-contain');
    model_select.empty().html(Mustache.to_html($('#models_tmpl').html(), data));
    model_select.find('select').select2({
      placeholder: "Select model",
      allow_clear: true,
      escapeMarkup: function(m) {
        return m;
      }
    });
    model_select.fadeIn('fast');
    bike = targetBike(target);
    if (bike.frame_model != null) {
      return target.find('select.model-select').val(bike.frame_model).trigger('change');
    }
  };

  addBikeContainer = function(bike) {
    if (bike == null) {
      bike = {};
    }
    return $.ajax({
      type: "GET",
      url: "/assets/select_list.json",
      success: function(data, textStatus, jqXHR) {
        var html;
        html = $(Mustache.to_html($('#base_tmpl').html(), data));
        $("#bikes-container").append(html);
        resetContainerCount();
        html.find('.manufacturer-select').select2({
          placeholder: "Choose manufacturer",
          allow_clear: true
        });
        html.find('.year-select').select2({
          placeholder: "Year"
        });
        html.fadeIn();
        if (bike != null) {
          return fillInBike(html, bike);
        }
      }
    });
  };

  urlParam = function(name) {
    var results, url;
    url = window.location.href;
    results = new RegExp("[\\?&]" + name + "=([^&#]*)").exec(url);
    if (!results) {
      return 0;
    }
    return results[1] || 0;
  };

  intitialBike = function() {
    var bike;
    return bike = {
      manufacturer: urlParam('s_manufacturer'),
      year: urlParam('s_year'),
      frame_model: urlParam('s_frame_model')
    };
  };

  targetBike = function(target) {
    var bike;
    bike = target.data('bike');
    if (!((bike != null) && (bike.frame_model != null))) {
      bike = {
        manufacturer: target.find('select.manufacturer-select').val(),
        year: target.find('select.year-select').val(),
        frame_model: target.find('select.model-select').val()
      };
    }
    return bike;
  };

  fillInBike = function(target, bike) {
    target.data('bike', bike);
    return target.find('select.manufacturer-select').val(bike.manufacturer).trigger('change');
  };

  initialize = function() {
    addBikeContainer(intitialBike());
    $('#new-compare').on('click', function(e) {
      e.preventDefault();
      return addBikeContainer(targetBike($('#bikes-container .bike').last()));
    });
    $('#bikes-container').on('click', '.close', function(e) {
      e.preventDefault();
      return $(e.target).parents('.bike').fadeOut(300, function() {
        $(e.target).parents('.bike').remove();
        return resetContainerCount();
      });
    });
    $('#bikes-container').on('click', '.comp_cat_link', function(e) {
      e.preventDefault();
      return collapseToggle($(e.target));
    });
    $('#bikes-container').on('change', 'select.model-select', function(e) {
      var target;
      target = $(e.target).parents('.bike');
      return getFrameModel(target);
    });
    $('#bikes-container').on('change', 'select.manufacturer-select', function(e) {
      return updateManufacturer($(e.target).parents('.bike'));
    });
    return $('#bikes-container').on('change', 'select.year-select', function(e) {
      return getModelList($(e.target).parents('.bike'));
    });
  };

  $(document).ready(function() {
    $('#bikes-container').css('min-height', "" + ($(window).height() * .75) + "px");
    return setTimeout((function() {
      $('#initial').addClass('off-screen');
      initialize();
      return setTimeout((function() {
        return $('#initial').addClass('removed');
      }), 500);
    }), 700);
  });

}).call(this);
